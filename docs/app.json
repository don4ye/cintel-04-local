[{"name": "app.py", "content": "# Import necessary libraries\nimport plotly.express as px\nfrom shiny.express import input, ui, render\nfrom shinywidgets import render_widget, render_plotly\nimport seaborn as sns\nfrom ipyleaflet import Map\nfrom palmerpenguins import load_penguins\nfrom shiny import reactive\n\n# Load the Palmer Penguins dataset into a Pandas DataFrame\npenguins_df = load_penguins()\n\n# Define the UI sidebar and main content items\nui.page_opts(title=\"Penguin Data Monsuru\")\n\n# Add a reactive calculation to filter the data\n@reactive.calc\ndef filtered_data():\n    return penguins_df[penguins_df[\"species\"].isin(input.selected_species_list())]\n\n# Add a Shiny UI sidebar for user interaction\nwith ui.sidebar(open=\"open\"):\n    ui.h2(\"Sidebar\")\n    ui.input_selectize(\"selected_attribute\", \"Choose a Column\", [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"])\n    ui.input_numeric(\"plotly_bin_count\", \"Number of Plotly Histogram Bins\", value=20)\n    ui.input_slider(\"seaborn_bin_count\", \"Number of Seaborn Bins\", 1, 20, 5)\n    ui.input_checkbox_group(\"selected_species_list\", \"Select Species\", [\"Adelie\", \"Gentoo\", \"Chinstrap\"], selected=[\"Adelie\"], inline=True)\n    ui.input_text(\"Text\", \"Enter text\", \"Hello Shiny\")\n    ui.hr()\n    ui.a(\"GitHub\", href=\"https://github.com/don4ye/cintel-02-data.git\", target=\"_blank\")\n\n# Add your layout for the main content area below\nwith ui.layout_columns():\n    with ui.card(full_screen=True):\n        ui.card_header(\"Plotly Histogram: Penguin Mass\")\n\n        @render_widget\n        def plot():\n            scatterplot = px.histogram(\n                data_frame=filtered_data(),  # Use filtered_data instead of penguins_df\n                x=input.selected_attribute(),  # Use the selected attribute here\n                nbins=input.plotly_bin_count(),\n            ).update_layout(\n                title={\"text\": \"Penguin Mass\", \"x\": 0.5},\n                yaxis_title=\"Count\",\n                xaxis_title=\"Selected Attribute\",  # Update the x-axis title\n            )\n\n            return scatterplot\n\n    with ui.card(full_screen=True):\n        ui.card_header(\"Seaborn Histogram: Penguin Mass\")\n\n        @render.plot(alt=\"A Seaborn histogram on penguin body mass in grams.\")\n        def seaborn_histogram():\n            ax = sns.histplot(data=filtered_data(), x=input.selected_attribute(), bins=input.seaborn_bin_count())  \n            ax.set_title(\"Palmer Penguins\")\n            ax.set_xlabel(\"Selected Attribute\")  # Update the x-axis label\n            ax.set_ylabel(\"Count\")\n            return ax\n\n    with ui.card(full_screen=True):\n        ui.h2(\"Penguin Data Table\")\n\n        @render.data_frame\n        def penguins_datatable():\n            return render.DataTable(filtered_data())\n\n        ui.h2(\"Penguin Data Grid\")\n\n        @render.data_frame\n        def penguins_datagrid():\n            return render.DataGrid(filtered_data())\n\n    with ui.card(full_screen=True):\n        ui.card_header(\"Plotly Scatterplot: Species\")\n        \n        @render_plotly\n        def plotly_scatterplot():\n            scatterplot = px.scatter(filtered_data(), x=\"bill_length_mm\", y=\"bill_depth_mm\", color=\"species\")\n            return scatterplot\n\n    with ui.card(full_screen=True):\n        ui.card_header(\"An ipyleaflet Map\")\n\n        @render_widget  \n        def map():\n            return Map(center=(50.6252978589571, 0.34580993652344), zoom=3)\n\n    with ui.card(full_screen=True):\n        ui.card_header(\"Input Text\")\n\n        @render.text\n        def text():\n            return input.Text()\n\n# Reactive calculations and effects\n@reactive.calc\ndef filtered_data():\n    return penguins_df[penguins_df[\"species\"].isin(input.selected_species_list())]\n", "type": "text"}]